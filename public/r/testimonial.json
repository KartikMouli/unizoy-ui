{
  "$schema": "https://ui.unizoy.com/schema/registry-item.json",
  "name": "testimonial",
  "type": "registry:ui",
  "author": "shadcn (https://ui.unizoy.com)",
  "dependencies": [
    "gsap",
    "@gsap/react"
  ],
  "files": [
    {
      "path": "ui/testimonial.tsx",
      "content": "\"use client\";\nimport gsap from \"gsap\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Roboto } from \"next/font/google\";\nimport { cn } from \"@/lib/utils\";\n\nconst roboto = Roboto({\n    subsets: [\"latin\"],\n    weight: [\"400\", \"500\", \"700\"],\n});\n\ninterface TestimonialProps {\n    title: string;\n    subTitle: string;\n    description: string;\n}\n\ninterface Props {\n    data: TestimonialProps[];\n    backgroundUrl?: string;\n    animationDuration ?:number;\n    backgroundClassName?: string\n    containerClassName?: string; // Custom classes for the outer container\n    contentWrapperClassName?: string; // Custom classes for the wrapper of content\n    titleTextClassName?: string; // Custom classes for the title text\n    subtitleTextClassName?: string; // Custom classes for the subtitle text\n    descriptionTextClassName?: string; // Custom classes for the description text\n}\n\nconst Testimonial: React.FC<Props> = ({\n    data,\n    backgroundUrl = \"https://static.videezy.com/system/resources/previews/000/007/313/original/Plexus.mp4\",\n    animationDuration=4000,\n    backgroundClassName = \"absolute top-0 left-0 w-screen h-screen object-cover -z-0 opacity-25\",\n    containerClassName = \"w-screen h-screen bg-black text-white\",\n    contentWrapperClassName = \"w-full md:w-11/12 lg:w-10/12 p-10\",\n    titleTextClassName = \"text-[1.75rem] md:text-[2rem] lg:text-[2.5rem]\",\n    subtitleTextClassName = \"text-2xl lg:text-3xl font-semibold\",\n    descriptionTextClassName = \"text-base md:text-lg text-white/90\",\n}) => {\n    const [activeTab, setActiveTab] = useState(0);\n    const [isFirst, setFirst] = useState<boolean>(true);\n    const linesRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        const animateIn = () => {\n            if (!linesRef.current) return;\n            const lines = linesRef.current.querySelectorAll(\"span\");\n            gsap.fromTo(\n                lines,\n                { y: 20, opacity: 0 },\n                {\n                    y: 0,\n                    opacity: 1,\n                    stagger: 0.05,\n                    duration: 0.8,\n                    ease: \"power2.out\",\n                }\n            );\n        };\n\n        const animateOut = (onComplete: () => void) => {\n            if (!linesRef.current) return;\n            const lines = linesRef.current.querySelectorAll(\"span\");\n            gsap.to(lines, {\n                y: -20,\n                opacity: 0,\n                duration: 0.8,\n                ease: \"power2.in\",\n                onComplete,\n            });\n        };\n\n        const interval = setInterval(() => {\n            animateOut(() => {\n                setActiveTab((prev) => (prev + 1) % data.length);\n                setTimeout(() => {\n                    animateIn();\n                }, 1); // Small gap\n            });\n        }, animationDuration);\n\n        animateIn(); // Initial animation\n\n        return () => clearInterval(interval);\n    }, [data.length]);\n    useEffect(() => {\n        setTimeout(() => setFirst(false), 5);\n    }, []);\n\n    const isVideo = (url: string) => {\n        return (\n            url.endsWith(\".mp4\") ||\n            url.endsWith(\".webm\") ||\n            url.endsWith(\".ogg\") ||\n            url.endsWith(\".mov\") ||\n            url.endsWith(\".avi\") ||\n            url.endsWith(\".flv\") ||\n            url.endsWith(\".mkv\")\n        );\n    };\n    return (\n        <div\n            className={cn(`relative w-screen h-screen bg-black text-white ${roboto.className}`, containerClassName)}\n        >\n            {\n                isVideo(backgroundUrl) ? (<video\n                    className={cn(\"absolute top-0 left-0 w-screen h-screen object-cover -z-0 opacity-25\", backgroundClassName)}\n                    src={backgroundUrl}\n                    autoPlay\n                    loop\n                    muted\n                />) : (\n\n                    <img\n                        className={cn(\"absolute top-0 left-0 w-screen h-screen object-cover -z-0 opacity-25\", backgroundClassName)}\n                        //  src=\"https://static.wixstatic.com/media/0d6674_db8c76159aef4e0fad0bf37dcad1b8ac~mv2.png/v1/fill/w_948,h_559,al_c,q_90,enc_avif,quality_auto/extream.png\"\n                        src={backgroundUrl}\n\n                    />\n                )\n            }\n\n\n            <div className={cn(\"relative flex flex-col justify-between w-full md:w-11/12 lg:w-10/12 h-full mx-auto p-10\", contentWrapperClassName)}>\n                <div className=\"space-y-4 md:space-y-7 lg:space-y-10\">\n                    {data.map(({ title }, index) => (\n                        <div key={index} className=\"relative w-fit group\">\n                            <span className={cn(\"text-[1.75rem] md:text-[2rem] lg:text-[2.5rem] font-bold cursor-pointer\", titleTextClassName)}>\n                                {title}\n                            </span>\n                            <div\n                                className={`absolute h-[1.125px] bg-gray-600 transition-all duration-500 ease-in-out ${index === activeTab ? \"w-full left-0\" : \"w-0 right-0\"\n                                    } group-hover:w-full group-hover:left-0`}\n                            ></div>\n                            {/* <div\n                className={`absolute h-[1.125px] bg-white transition-[width] ease-in-out\n                     ${index === activeTab? `${isFirst ? \"w-0\" : \"w-full\"} duration-[3000ms]`: \"w-0 right-0 duration-500\"} `}\n              ></div> */}\n                            <div\n                                className=\"absolute h-[1.125px] bg-white transition-[width] ease-in-out\"\n                                style={{\n                                    width: index === activeTab ? (isFirst ? \"0%\" : \"100%\") : \"0%\",\n                                    right: index === activeTab ? \"auto\" : \"0\",\n                                    transitionDuration: index === activeTab ?  `${animationDuration}ms` : \"500ms\",\n                                }}\n                            ></div>\n                            <div\n                            ></div>\n                        </div>\n                    ))}\n                </div>\n\n                {/* Bottom Right Div */}\n                <div className=\"\">\n\n                    <div\n                        className=\"sm:float-right max-w-[25rem] overflow-hidden\"\n                        ref={linesRef}\n                    >\n                        {data.map(({ subTitle, description }, index) =>\n                            index === activeTab ? (\n                                <div key={index} className=\"relative w-fit groupspace-y-3 lg:space-y-5\">\n                                    <div className=\"\">\n                                        {subTitle.split(\"\\n\").map((line, idx) => (\n                                            <div key={idx} className=\"h-10  overflow-hidden\">\n                                                <span className={cn(\"text-2xl lg:text-3xl  block font-semibold pl-[2px]\", subtitleTextClassName)}>{line}</span>\n                                            </div>\n                                        ))}\n                                    </div>\n                                    <div className=\"\">\n                                        {description.split(\"\\n\").map((line, idx) => (\n                                            <div key={idx} className=\"h-7  overflow-hidden\">\n                                                <span className={cn(\"text-base md:text-lg block text-white/90 pl-[2px]\", descriptionTextClassName)}>{line}</span>\n                                            </div>\n                                        ))}\n                                    </div>\n                                </div>\n                            ) : null\n                        )}\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    );\n};\n\nexport { Testimonial };",
      "type": "registry:ui",
      "target": ""
    }
  ],
  "categories": [
    "hover-effect"
  ]
}